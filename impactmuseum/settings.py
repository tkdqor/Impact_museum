"""
Django settings for impactmuseum project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# 환경변수를 불러올 수 있는 상태로 세팅
env = environ.Env(DEBUG=(bool, True))

# .env파일에서 환경변수를 불러올 것이라고 설정
environ.Env.read_env(
    env_file=os.path.join(BASE_DIR, '.env')
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',       # 어드민 상에서 카카오 또는 구글 인증 정보 설정을 위해 sites을 등록
    'posts',
    'rest_framework',
    'accounts',
    'products',

    # all auth
    'allauth',                    # allauth에서 사용하는 계정 set들과 관련된 기능들을 가지고 오기
    'allauth.account',
    'allauth.socialaccount',      # allauth로 SNS 계정 연동이 가능하게끔 해주는 모듈
    'allauth.socialaccount.providers.auth0',   # provider 디폴트 값
    'allauth.socialaccount.providers.google',  # google 연동을 위한 provider
    'allauth.socialaccount.providers.kakao',   # kakao 연동을 위한 provider
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# allauth에서 account 로그인을 지원하기 위한 인증 로직 및 백엔드 로직 설정
AUTHENTICATION_BACKENDS = [
    'allauth.account.auth_backends.AuthenticationBackend',  # allauth에서 사용하는 기본 백엔드 로직
    'django.contrib.auth.backends.ModelBackend', # 우리가 받은 클라이언트 ID와 비밀번호를 어드민에서 입력해 OAuth에 필요한 값들을 SNS서버에 전송할 수 있게 해주는 모듈            
]



ROOT_URLCONF = 'impactmuseum.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'impactmuseum.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': env('DATABASES_HOST'),
        'PORT': env('DATABASES_PORT'),
        'NAME': env('DATABASES_NAME'),
        'USER': env('DATABASES_USER'),
        'PASSWORD': env('DATABASES_PASSWORD'),
        'OPTIONS': {
                    'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",  # MySQL Strict 모드 default로 설정
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# All auth
SITE_ID = 2   # INSTALLED_APPS에 django.contrib.sites를 추가해주면 SITE_ID를 1로 설정해줘야 어드민 페이지를 확인할 수 있음 / Sites 모델에 새롭게 추가하여 2번으로 변경
LOGIN_REDIRECT_URL = 'accounts:mypage'            # 로그인이 성공할 경우 redirect 해주는 페이지 설정
ACCOUNT_LOGOUT_REDIRECT_URL = 'products:index'   # 로그아웃이 성공할 경우 redirect 해주는 페이지 설정
ACCOUNT_LOGOUT_ON_GET = True            # 로그아웃 시, URL로 GET으로 접근해도 로그아웃 처리가 가능할 수 있도록 설정
SOCIALACCOUNT_LOGIN_ON_GET = True       # 구글 소셜 로그인 버튼 클릭 후 뜨게되는 페이지를 스킵할 수 있도록 설정

# 구글 소셜 로그인 시 받아오는 정보 설정
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile', 'email'
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }    
    }
}

